generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_AIVEN")
  schemas  = ["products", "orders"]
}

enum Category {
  brushes
  stickers
  templates
  planners
  freebies

  @@schema("products")
}

model Tag {
  id       String    @id @default(cuid())
  name     String    @unique
  slug     String    @unique
  products Product[] @relation("ProductToTag")

  @@schema("products")
}

model Product {
  id            String         @id @default(cuid())
  name          String
  price         Float
  description   String
  category      Category
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  zip_file_name String
  slug          String         @unique
  tags          Tag[]          @relation("ProductToTag")
  images        ProductImage[]
  OrderItem     OrderItem[]

  @@schema("products")
}

model ProductImage {
  id        String  @id @default(uuid())
  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  alt_text  String
  url       String

  @@schema("products")
}

enum OrderStatus {
  PENDING
  COMPLETED
  FAILED

  @@schema("orders")
}

model Order {
  id             String      @id @default(cuid())
  displayId      String      @unique
  userId         String // Clerk User ID
  amount         Float
  status         OrderStatus @default(PENDING)
  stripeChargeId String?     @unique // Store Stripe Charge ID for reference
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  items          OrderItem[]

  @@index([userId])
  @@schema("orders")
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId String
  product   Product @relation(fields: [productId], references: [id]) // Don't cascade delete product if order item is deleted
  quantity  Int     @default(1) // Quantity is always 1 for digital products
  price     Float

  @@schema("orders")
}
